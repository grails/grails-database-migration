buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin:1.6.1"
    }
}

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.internal.grails-plugin-publish"
apply plugin:"org.grails.grails-gsp"
apply plugin: "org.asciidoctor.convert"

version project.projectVersion
group "org.grails.plugins"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

configurations {
    documentation
}

dependencies {
    compile "org.liquibase:liquibase-core:$liquibaseVersion"

    compile("org.liquibase.ext:liquibase-hibernate5:$liquibaseHibernateVersion") {
        exclude group: 'org.hibernate', module: 'hibernate-core'
        exclude group: 'org.hibernate', module: 'hibernate-entitymanager'
        exclude group: 'org.hibernate', module: 'hibernate-envers'
        exclude group: 'org.liquibase', module: 'liquibase-core'
    }
    compileOnly 'org.hibernate:hibernate-core:5.6.0.Final'

    compileOnly 'org.springframework.boot:spring-boot-starter-logging'
    compileOnly "org.springframework.boot:spring-boot-starter-actuator"
    compileOnly "org.springframework.boot:spring-boot-autoconfigure"
    compileOnly "org.springframework.boot:spring-boot-starter-tomcat"

    compileOnly "org.grails:grails-web-boot"
    compileOnly "org.grails:grails-dependencies"
    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
    compileOnly "org.grails.plugins:hibernate5"

    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.mockito:mockito-core"
    testCompile "org.grails:grails-web-testing-support"

    compile("org.grails:grails-shell") {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }

    documentation "org.codehaus.groovy:groovy-all:2.5.15"

    testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'
}

grailsPublish {
    userOrg = "grails"
    githubSlug = 'grails-plugins/grails-database-migration'
    license {
        name = 'Apache-2.0'
    }
    title = "Grails Database Migration Plugin"
    desc = "Grails Database Migration Plugin"
    developers = [kazukiyamamoto: "Kazuki YAMAMOTO"]
}

asciidoctor {
    resources {
        from('src/docs/images')
        into "./images"
    }

    attributes 'experimental'  : 'true',
            'compat-mode'   : 'true',
            'toc'           : 'left',
            'icons'         : 'font',
            'version'       : project.version,
            'groupId'       : project.group,
            'artifactId'    : project.name,
            'sourcedir'     : "${projectDir}/src/main/groovy",
            'liquibaseVersion': liquibaseVersion
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

task apidocs(type: Groovydoc) {
    source project.files('src/main/groovy')

    destinationDir = new File(buildDir, 'docs/api')
    // Might need a classpath
    docTitle = "Grails Database Migration Plugin ${version}"

    classpath = configurations.documentation
    groovyClasspath = configurations.documentation
}

task docs(type:Copy, dependsOn:[apidocs, asciidoctor])  {
    from "$buildDir/asciidoc/html5"
    into "$buildDir/docs"
}

jar {
    exclude "testapp/**/**"
}

configurations.testCompile.extendsFrom(configurations.compileOnly)
